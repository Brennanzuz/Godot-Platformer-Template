[gd_scene load_steps=7 format=2]

[ext_resource path="res://scenes/player/Player.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://scenes/player/abilities/CoyoteJump.tscn" type="PackedScene" id=3]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 9, 9 )

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
uniform vec2 dir = vec2(0,0);
uniform int quality = 4;

void vertex(){
	vec2 blurSize = abs(dir) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

void fragment(){
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = texture(TEXTURE, UV) * inSquare;
	vec2 stepSize = dir/(float(quality));
	vec2 uv;
	for(int i = 1; i <= quality; i++){
		uv = UV + stepSize * float(i);
		inSquare = insideUnitSquare(uv);
		numSamples += inSquare;
		COLOR += texture(TEXTURE, uv) * inSquare;
		
		uv = UV - stepSize * float(i);
		inSquare = insideUnitSquare(uv);
		numSamples += inSquare;
		COLOR += texture(TEXTURE, uv) * inSquare;
	}
	COLOR.rgb /= numSamples;
	COLOR.a /= float(quality)*2.0 + 1.0;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/dir = Vector2( 0, 0 )
shader_param/quality = 4

[node name="Player" type="KinematicBody2D"]
z_index = 2
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.4, 0.4 )
smoothing_enabled = true

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 3 )
scale = Vector2( 0.28125, 0.28125 )
texture = ExtResource( 2 )

[node name="CoyoteJump" parent="." instance=ExtResource( 3 )]

[node name="SkillTimers" type="Node" parent="."]

[node name="LongRangeTimer" type="Timer" parent="SkillTimers"]
wait_time = 0.2
one_shot = true

[connection signal="timeout" from="SkillTimers/LongRangeTimer" to="." method="_on_LongRangeTimer_timeout"]
